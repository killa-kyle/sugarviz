{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/krose/Development/_personal-projects/sugarviz/expo/App.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport ScannerScreen from \"./screens/ScannerScreen\";\nvar Tab = createBottomTabNavigator();\n\nvar App = function App() {\n  function SettingsScreen() {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Settings!\"));\n  }\n\n  function HomeScreen(_ref) {\n    var _product, _product$product, _product2, _product2$product;\n\n    var navigation = _ref.navigation;\n    var productImage = (_product = product) == null ? void 0 : (_product$product = _product.product) == null ? void 0 : _product$product.image_url;\n    var productName = (_product2 = product) == null ? void 0 : (_product2$product = _product2.product) == null ? void 0 : _product2$product.product_name;\n    return React.createElement(SafeAreaProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"start\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \" \", productName), React.createElement(BarCodeScanner, {\n      onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n      style: {\n        left: 0,\n        right: 0,\n        width: \"95%\",\n        borderRadius: \"12px\",\n        overflow: \"hidden\",\n        height: 300,\n        top: 60\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return React.createElement(SafeAreaProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n              color = _ref3.color,\n              size = _ref3.size;\n          var iconName;\n\n          if (route.name === 'Scan') {\n            iconName = focused ? 'scan-circle' : 'scan-circle-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'ios-settings' : 'ios-settings-outline';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 24\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'blue',\n      inactiveTintColor: 'gray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Scan\",\n    component: ScannerScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/krose/Development/_personal-projects/sugarviz/expo/App.js"],"names":["React","useState","useEffect","SafeAreaProvider","NavigationContainer","createBottomTabNavigator","createStackNavigator","Ionicons","BarCodeScanner","ScannerScreen","Tab","App","SettingsScreen","flex","justifyContent","alignItems","HomeScreen","navigation","productImage","product","image_url","productName","product_name","scanned","undefined","handleBarCodeScanned","left","right","width","borderRadius","overflow","height","top","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Text, View, Button } from \"react-native\"\nimport { SafeAreaProvider } from \"react-native-safe-area-context\"\nimport { NavigationContainer } from \"@react-navigation/native\"\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\nimport { createStackNavigator } from '@react-navigation/stack';\n   \nimport { Ionicons } from \"@expo/vector-icons\"\n\nimport { BarCodeScanner } from \"expo-barcode-scanner\"\n\n\nimport ScannerScreen from './screens/ScannerScreen'\n\nconst Tab = createBottomTabNavigator()\n\n\nconst App = () => {\n\n\n\n  // function ScannerScreen({ route, navigation }) {\n\n  //   return (\n  //     <Stack.Navigator>\n  //       <Stack.Screen\n  //         name=\"Home\"\n  //         component={HomeScreen}\n  //         options={{\n  //           title: \"Scan a barcode\",\n  //           headerStyle: {\n  //             backgroundColor: \"rgba(255,229,0,1)\",\n  //           },\n  //           headerTintColor: \"#222\",\n  //           headerTitleStyle: {\n  //             fontWeight: \"bold\",\n  //           },\n  //         }}\n  //       />\n  //       <Stack.Screen\n  //         name=\"Results\"\n  //         component={ResultsScreen}\n  //         options={({ route }) => ({ title: route.params.name })}\n  //       />\n  //     </Stack.Navigator>\n  //   )    \n\n  // }\n\n  function SettingsScreen() {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text>Settings!</Text>\n      </View>\n    )\n  }\n\n\n  function HomeScreen({ navigation }) {\n\n    const productImage = product?.product?.image_url\n    const productName = product?.product?.product_name\n    \n    return (\n      <SafeAreaProvider>\n        <View style={{ flex: 1, justifyContent: \"start\", alignItems: \"center\" }}>\n          <Text> {productName}</Text>\n          <BarCodeScanner\n            onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n            style={{\n              // ...StyleSheet.absoluteFillObject,\n              // position: \"relative\",\n              // bottom: \"50%\",\n              left: 0,\n              right: 0,\n              width: \"95%\",\n              borderRadius: \"12px\",\n              overflow: \"hidden\",\n              height: 300,\n              top: 60,\n            }}\n          />\n        </View>\n      </SafeAreaProvider>\n\n    )\n    // return (\n    //   <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n    //     <Text>Home Screen</Text>\n    //     <Button\n    //       title=\"Go to Profile\"\n    //       onPress={() =>\n    //         navigation.navigate('Profile', { name: 'Custom profile header' })\n    //       }\n    //     />\n    //   </View>\n    // );\n  }\n\n  // function ResultsScreen({ route, navigation }) {\n  //   const {data } = route.params\n  //   return (\n  //     <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n  //       <Text>{data}</Text>\n  //       <Button title=\"Go back\" onPress={() => navigation.goBack()} />\n  //     </View>\n  //   );\n  // }\n\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer>\n        <Tab.Navigator\n          screenOptions={({ route }) => ({\n              tabBarIcon: ({ focused, color, size }) => {\n                let iconName;\n\n                if (route.name === 'Scan') {\n                  iconName = focused\n                    ? 'scan-circle'\n                    : 'scan-circle-outline';\n                } else if (route.name === 'Settings') {\n                  iconName = focused ? 'ios-settings' : 'ios-settings-outline';\n                }\n                \n                return <Ionicons name={iconName} size={size} color={color} />;\n              },\n            })}\n            tabBarOptions={{\n              activeTintColor: 'blue',\n              inactiveTintColor: 'gray',\n            }}\n          >\n          <Tab.Screen name=\"Scan\" component={ScannerScreen} />\n          <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n        </Tab.Navigator>\n      </NavigationContainer>\n    </SafeAreaProvider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}